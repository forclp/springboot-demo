<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jk.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.jk.model.Role" >
    <id column="roleid" property="roleid" jdbcType="INTEGER" />
    <result column="rolename" property="rolename" jdbcType="VARCHAR" />
    <result column="roledescription" property="roledescription" jdbcType="VARCHAR" />
    <result column="text" property="text" jdbcType="VARCHAR" />
    <result column="checked" property="checked" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    roleid, rolename, roledescription, text, checked
  </sql>


  <select id="getRoleAll" resultMap="BaseResultMap">
    select * from a_role
  </select>


  <select id="queryRole" resultMap="BaseResultMap">
    select * from a_role
    <where>
      <if test="role.rolename!=null and role.rolename!=''">
        and rolename like '%${role.rolename}%'
      </if>
    </where>
    limit #{sta},#{rows}
  </select>


  <select id="queryRoleCount" resultType="long">
    select count(*) from a_role
  </select>



  <delete id="deleteRole">
    delete from a_role where roleid in(${ids})
  </delete>






  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from a_role
    where roleid = #{roleid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from a_role
    where roleid = #{roleid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jk.model.Role" >
    insert into a_role (roleid, rolename, roledescription, 
      text, checked)
    values (#{roleid,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, #{roledescription,jdbcType=VARCHAR}, 
      #{text,jdbcType=VARCHAR}, #{checked,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jk.model.Role" >
    insert into a_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleid != null" >
        roleid,
      </if>
      <if test="rolename != null" >
        rolename,
      </if>
      <if test="roledescription != null" >
        roledescription,
      </if>
      <if test="text != null" >
        text,
      </if>
      <if test="checked != null" >
        checked,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleid != null" >
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roledescription != null" >
        #{roledescription,jdbcType=VARCHAR},
      </if>
      <if test="text != null" >
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="checked != null" >
        #{checked,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jk.model.Role" >
    update a_role
    <set >
      <if test="rolename != null" >
        rolename = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roledescription != null" >
        roledescription = #{roledescription,jdbcType=VARCHAR},
      </if>
      <if test="text != null" >
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="checked != null" >
        checked = #{checked,jdbcType=VARCHAR},
      </if>
    </set>
    where roleid = #{roleid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jk.model.Role" >
    update a_role
    set rolename = #{rolename,jdbcType=VARCHAR},
      roledescription = #{roledescription,jdbcType=VARCHAR},
      text = #{text,jdbcType=VARCHAR},
      checked = #{checked,jdbcType=VARCHAR}
    where roleid = #{roleid,jdbcType=INTEGER}
  </update>
</mapper>